{
	"info": {
		"_postman_id": "6005394d-9081-4317-9ae1-59ba6f102aca",
		"name": "Customer Onboarding App - LightningTalk",
		"description": "Simplify the merchant onboardings and improve your sales team’s efficiency thanks to Saltpay’s Merchant Onboarding App.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21744518"
	},
	"item": [
		{
			"name": "GB Happy Path (AGW)",
			"item": [
				{
					"name": "Create New Onboarding",
					"item": [
						{
							"name": "Create New Onboarding",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationNewOnboarding should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationNewOnboarding test should Succeed\", function (){",
											"    const data = pm.response.json().data.newOnboarding; ",
											"    pm.environment.set('subscriptionId', data.id);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const country = pm.environment.get('country');",
											"const registrationCompanyNumber = country === \"GB\" ? \"07278788\" : \"500000085\";",
											"pm.environment.set('registrationCompanyNumber', registrationCompanyNumber)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  mutation NewOnboarding {\n    newOnboarding {\n      id\n    }\n  }",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Submit Registration",
					"item": [
						{
							"name": "Get Externall Company Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"queryGetExternalCompanyData should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"queryGetExternalCompanyData test should Succeed\", function (){",
											"    const registrationCompanyNumber = pm.variables.get(\"registrationCompanyNumber\");",
											"    const data = pm.response.json().data.externalCompanyInfo; ",
											"    pm.expect(data).to.have.property('registeredNumber').to.be.equal(registrationCompanyNumber);",
											"    pm.expect(data).to.have.property('legalStructure');",
											"    pm.expect(data).to.have.property('registeredAddress');",
											"    pm.expect(data).to.have.property('registeredName');",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  query externalCompanyInfo($country: String, $registrationNumber: String) {\n    externalCompanyInfo(country: $country, registrationNumber: $registrationNumber) {\n      registeredAddress {\n        city\n        country\n        streetAddressLine1\n        streetAddressLine2\n        zipcode\n      }\n      legalStructure\n      registeredName\n      registeredNumber\n      vatNumber\n    }\n  }",
										"variables": "{\n  \"registrationNumber\": \"{{registrationCompanyNumber}}\",\n  \"country\": \"{{country}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Subscription Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationSaveSubscription should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationSaveSubscription test should Succeed\", function (){",
											"    const subscriptionId = pm.variables.get(\"subscriptionId\");",
											"    const data = pm.response.json().data.saveSubscription; ",
											"    pm.expect(data).to.have.property('id').to.be.equal(subscriptionId);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"const companyNumber = `${Math.floor(100000000 + Math.random() * 900000000)}`;",
											"const storeName = 'Store - ' + Math.random().toString(36).substring(2, 11);",
											"const email = Math.random().toString(36).substring(2, 11) + '@domain.com';",
											"",
											"pm.environment.set('companyNumber', companyNumber);",
											"pm.environment.set('storeName', storeName);",
											"pm.environment.set('email', email);",
											"",
											"const tmsApiKey = pm.variables.get(\"tmsApiKey\");",
											"",
											"const terminalSNRequest = {",
											"  url: 'https://tms.test.kompakts.sk/api/tms/item/mock',",
											"  method: 'GET',",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\",",
											"    \"Authorization\": tmsApiKey",
											"  },",
											"};",
											"",
											"pm.sendRequest(terminalSNRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson)",
											"    pm.environment.set('terminalSN', responseJson['serialNumber']);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  mutation SaveSubscription($data: SubscriptionInput, $subscriptionId: String) {\n    saveSubscription(data: $data, id: $subscriptionId) {\n      id\n    }\n  }",
										"variables": "{\n    \"data\": {\n        \"items\": [\n            {\n                \"action\": \"insert\",\n                \"serviceId\": \"aba3ca9e-0601-4fc6-b903-301412919d4e\",\n                \"price\": {\n                    \"currency\": \"GBP\",\n                    \"interval\": \"monthly\",\n                    \"amount\": \"2.00\"\n                },\n                \"extraFields\": \"{\\\"fees\\\":{\\\"other_base_fee\\\":2,\\\"visa_mc_fee\\\":2,\\\"fee_type\\\":\\\"BLENDED\\\"},\\\"market\\\":{\\\"partner\\\":\\\"RMS\\\"},\\\"processing_currencies\\\":[\\\"GBP\\\"],\\\"sales_agent\\\":{\\\"email\\\":\\\"mcorreia@mail.net\\\",\\\"first_name\\\":\\\"Marcio\\\",\\\"last_name\\\":\\\"Correia\\\"}}\"\n            },\n            {\n                \"action\": \"insert\",\n                \"serviceId\": \"c1dba24a-e8c3-4127-b6e3-27f134a13cec\",\n                \"price\": {\n                    \"currency\": \"GBP\",\n                    \"interval\": \"monthly\",\n                    \"amount\": \"2.00\"\n                },\n                \"extraFields\": \"{\\\"serial_number\\\":\\\"{{terminalSN}}\\\"}\"\n            }\n        ],\n        \"store\": {\n            \"address\": {\n                \"country\": \"GB\",\n                \"streetAddressLine1\": \"Test Address line 1\",\n                \"streetAddressLine2\": \"Test Address line 2\",\n                \"zipcode\": \"100000\",\n                \"city\": \"Test City\"\n            },\n            \"billingEmail\": \"{{email}}\",\n            \"chargingBankAccount\": {\n                \"iban\": \"GB70 BARC 2003 7878 5462 47\"\n            },\n            \"company\": {\n                \"legalStructure\": \"LIMITED\",\n                \"registeredAddress\": {\n                    \"city\": \"Cockermouth\",\n                    \"country\": \"GB\",\n                    \"streetAddressLine1\": \"2 Europe Way\",\n                    \"streetAddressLine2\": \"\",\n                    \"zipcode\": \"Ca13 0rj\"\n                },\n                \"registeredName\": \"Prufrock Coffee Limited\",\n                \"registeredNumber\": \"{{companyNumber}}\",\n                \"vatNumber\": \"GB072787881\",\n                \"billingEmail\": \"{{email}}\",\n                \"chargingBankAccount\": {\n                    \"iban\": \"GB70 BARC 2003 7878 5462 47\"\n                },\n                \"authorizer\": {\n                    \"address\": {\n                        \"country\": \"GB\",\n                        \"streetAddressLine1\": \"TEST - Address line 1\",\n                        \"streetAddressLine2\": \"TEST - Address line 2\",\n                        \"zipcode\": \"21 2121\",\n                        \"city\": \"TEST - City\"\n                    },\n                    \"birthDate\": \"2004-02-21\",\n                    \"country\": \"GB\",\n                    \"email\": \"{{email}}\",\n                    \"firstName\": \"TEST - Onboarding First Name\",\n                    \"lastName\": \"TEST - Onboarding Last Name\",\n                    \"locale\": \"en-GB\",\n                    \"middleName\": \"TEST - Onboarding Middle Name\",\n                    \"phoneCountryCode\": \"44\",\n                    \"phoneNumber\": \"11111111\"\n                }\n            },\n            \"mcc\": \"5812\",\n            \"name\": \"{{storeName}}\",\n            \"phoneCountryCode\": \"44\",\n            \"phoneNumber\": \"1111111\"\n        }\n    },\n  \"subscriptionId\": \"{{subscriptionId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "Mutation to save KYC information to BFF"
							},
							"response": []
						},
						{
							"name": "Get Onboarding Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"queryOnboardingData should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"queryOnboardingData test should Succeed\", function (){",
											"    const subscriptionId = pm.variables.get(\"subscriptionId\");",
											"    const data = pm.response.json().data.subscription; ",
											"    pm.expect(data).to.have.property('id').to.be.equal(subscriptionId);",
											"    pm.expect(data).to.have.property('store');",
											"    pm.expect(data).to.have.property('price');",
											"    pm.expect(data).to.have.property('proposal');",
											"    pm.expect(data).to.have.property('items');",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  query OnboardingData($subscriptionId: String, $country: String) {\n    me {\n      address {\n        country\n      }\n    }\n    partners(country: $country) {\n      name\n      services {\n        id\n        name\n      }\n    }\n    subscription(subscriptionId: $subscriptionId) {\n      id\n      gmdId\n      gmdSubscription {\n        items {\n          extraFields\n          gmdId\n          serviceId\n          cancelledAt\n          price {\n            amount\n            interval\n            currency\n          }\n        }\n        price {\n            amount\n            interval\n            currency\n        }\n        store {\n          address {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n          }\n          billingEmail\n          company {\n            authorizer {\n              email\n              firstName\n              lastName\n              locale\n              middleName\n              phoneCountryCode\n              phoneNumber\n              address {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n              }\n              country\n              birthDate\n            }\n            documents {\n              type\n              path\n            }\n            billingEmail\n            legalStructure\n            vatNumber\n            registeredAddress {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n            }\n            registeredName\n            registeredNumber\n            chargingBankAccount {\n              iban\n            }\n          }\n          mcc\n          name\n          phoneCountryCode\n          phoneNumber\n          chargingBankAccount {\n            iban\n          }\n        }\n      }\n      items {\n        extraFields\n        gmdId\n        serviceId\n        price {\n            amount\n            interval\n            currency\n        }\n      }\n      price {\n        amount\n        interval\n        currency\n      }\n      status\n      store {\n        address {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n        }\n        billingEmail\n        company {\n          authorizer {\n            email\n            firstName\n            lastName\n            locale\n            middleName\n            phoneCountryCode\n            phoneNumber\n            address {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n            }\n            country\n            birthDate\n          }\n          documents {\n            type\n            path\n          }\n          billingEmail\n          legalStructure\n          vatNumber\n          registeredAddress {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n          }\n          registeredName\n          registeredNumber\n          chargingBankAccount {\n            iban\n          }\n        }\n        mcc\n        name\n        phoneCountryCode\n        phoneNumber\n        chargingBankAccount {\n          iban\n        }\n      }\n      proposal {\n        sentAt\n        sentData\n      }\n    }\n  }",
										"variables": "{\n  \"subscriptionId\": \"{{subscriptionId}}\",\n  \"country\": \"{{country}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "mutationSubmitRegistration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationSubmitRegistration should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"mutationSubmitRegistration test should Succeed\", function (){",
											"    const storeName = pm.variables.get(\"storeName\");",
											"    const data = pm.response.json().data.submit; ",
											"    pm.expect(data.store).to.have.property('name').to.be.equal(storeName);",
											"    pm.expect(data).to.have.property(\"id\");",
											"    pm.expect(data).to.have.property(\"status\");",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-caller-id",
										"value": "OnboardingUI",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation Submit($subscriptionId: String) {\n  submit(subscriptionId: $subscriptionId) {\n    id\n    status\n    store {\n      name\n    }\n  }\n}",
										"variables": "{\n  \"subscriptionId\": \"{{subscriptionId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Upload Documents",
					"item": [
						{
							"name": "Get Onboarding Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"queryOnboardingData should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"queryOnboardingData test should Succeed\", function (){",
											"    const data = pm.response.json().data.subscription.gmdSubscription; ",
											"    pm.expect(data).to.have.property('store');",
											"    pm.expect(data).to.have.property('price');",
											"    pm.expect(data).to.have.property('items');",
											"",
											"    pm.environment.set('personId', data.store.company.authorizer.id);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  query OnboardingData($subscriptionId: String, $country: String) {\n    me {\n      address {\n        country\n      }\n    }\n    partners(country: $country) {\n      name\n      services {\n        id\n        name\n      }\n    }\n    subscription(subscriptionId: $subscriptionId) {\n      id\n      gmdId\n      gmdSubscription {\n        items {\n          extraFields\n          gmdId\n          serviceId\n          cancelledAt\n          price {\n            amount\n            interval\n            currency\n          }\n        }\n        price {\n            amount\n            interval\n            currency\n        }\n        store {\n          address {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n          }\n          billingEmail\n          company {\n            authorizer {\n              email\n              firstName\n              lastName\n              locale\n              id\n              middleName\n              phoneCountryCode\n              phoneNumber\n              address {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n              }\n              country\n              birthDate\n            }\n            documents {\n              type\n              path\n            }\n            billingEmail\n            legalStructure\n            vatNumber\n            registeredAddress {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n            }\n            registeredName\n            registeredNumber\n            chargingBankAccount {\n              iban\n            }\n          }\n          mcc\n          name\n          phoneCountryCode\n          phoneNumber\n          chargingBankAccount {\n            iban\n          }\n        }\n      }\n      items {\n        extraFields\n        gmdId\n        serviceId\n        price {\n            amount\n            interval\n            currency\n        }\n      }\n      price {\n        amount\n        interval\n        currency\n      }\n      status\n      store {\n        address {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n        }\n        billingEmail\n        company {\n          authorizer {\n            email\n            firstName\n            lastName\n            locale\n            middleName\n            phoneCountryCode\n            phoneNumber\n            address {\n                city\n                country\n                streetAddressLine1\n                streetAddressLine2\n                zipcode\n            }\n            country\n            birthDate\n          }\n          documents {\n            type\n            path\n          }\n          billingEmail\n          legalStructure\n          vatNumber\n          registeredAddress {\n            city\n            country\n            streetAddressLine1\n            streetAddressLine2\n            zipcode\n          }\n          registeredName\n          registeredNumber\n          chargingBankAccount {\n            iban\n          }\n        }\n        mcc\n        name\n        phoneCountryCode\n        phoneNumber\n        chargingBankAccount {\n          iban\n        }\n      }\n      proposal {\n        sentAt\n        sentData\n      }\n    }\n  }",
										"variables": "{\n  \"subscriptionId\": \"{{subscriptionId}}\",\n  \"country\": \"{{country}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Documents - type ID_FRONT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationUploadDocument ID_FRONT should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationUploadDocument ID_FRONT test should Succeed\", function (){",
											"    const data = pm.response.json().data.uploadDocument; ",
											"    const personId = pm.environment.get('personId')",
											"    pm.expect(data).to.have.property(\"personId\").to.be.equal(personId);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  mutation UploadDocument($fileBase64: String!, $type: String!, $personId: String, $companyId: String) {\n    uploadDocument(fileBase64: $fileBase64, type: $type, personId: $personId, companyId: $companyId) {\n      personId\n      companyId\n    }\n  }",
										"variables": "{\n    \"fileBase64\": \"\",\n    \"type\": \"ID_FRONT\",\n    \"personId\": \"{{personId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Documents - type ID_BACK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationUploadDocument ID_BACK should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationUploadDocument ID_BACK test should Succeed\", function (){",
											"    const data = pm.response.json().data.uploadDocument; ",
											"    const personId = pm.environment.get('personId')",
											"    pm.expect(data).to.have.property(\"personId\").to.be.equal(personId);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  mutation UploadDocument($fileBase64: String!, $type: String!, $personId: String, $companyId: String) {\n    uploadDocument(fileBase64: $fileBase64, type: $type, personId: $personId, companyId: $companyId) {\n      personId\n      companyId\n    }\n  }",
										"variables": "{\n    \"fileBase64\": \"\",\n    \"type\": \"ID_BACK\",\n    \"personId\": \"{{personId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Documents - type PROOF_OF_ADDRESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationUploadDocument PROOF_OF_ADDRESS should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationUploadDocument PROOF_OF_ADDRESS test should Succeed\", function (){",
											"    const data = pm.response.json().data.uploadDocument; ",
											"    const personId = pm.environment.get('personId')",
											"    pm.expect(data).to.have.property(\"personId\").to.be.equal(personId);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  mutation UploadDocument($fileBase64: String!, $type: String!, $personId: String, $companyId: String) {\n    uploadDocument(fileBase64: $fileBase64, type: $type, personId: $personId, companyId: $companyId) {\n      personId\n      companyId\n    }\n  }",
										"variables": "{\n    \"fileBase64\": \"\",\n    \"type\": \"PROOF_OF_ADDRESS\",\n    \"personId\": \"{{personId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Finish Adoption Stage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mutationFinishAdoption should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"mutationFinishAdoption test should Succeed\", function (){",
											"    const data = pm.response.json().data.finishAdoption; ",
											"    pm.expect(data).to.have.property(\"status\").to.be.equal(\"onboarded\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation FinishAdoption($subscriptionId: String) {\n  finishAdoption(subscriptionId: $subscriptionId) {\n    status\n  }\n}",
										"variables": "{\n  \"subscriptionId\": \"{{subscriptionId}}\"\n}"
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Onboarding List",
					"item": [
						{
							"name": "Get List With Onboardings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"queryOnboardingsList should PASS\", function (){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response time is less than 5000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});",
											"",
											"pm.test(\"queryOnboardingsList test should Succeed\", function (){",
											"    const subscriptionId = pm.variables.get(\"subscriptionId\");",
											"    const data = pm.response.json().data.me; ",
											"    const subscriptionsOnboardedList = pm.response.json().data.me.subscriptionsOnboardedList; ",
											"    pm.expect(data).to.have.property('subscriptionsOnboardedList').to.be.an('array');",
											"    pm.expect(data).to.have.property('subscriptionsPendingList').to.be.an('array');",
											"    pm.expect(subscriptionsOnboardedList.find(onb => onb.id === subscriptionId).id).to.be.equal(subscriptionId);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "  query SubscriptionsOnboardedList {\n    me {\n      subscriptionsOnboardedList {\n        store {\n          name\n        }\n        id\n        insertedAt\n      }\n      subscriptionsPendingList {\n        store {\n          name\n        }\n        id\n        insertedAt\n      }\n    }\n  }",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Happy path scenario with test for company autofill, POSSolution, Partner AGW",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}